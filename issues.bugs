[00003 | 10/12/2006 | Open | Feature | External file support]

Would be nice to be able to load tile map info from external files.
Having an editor would really rock.

[00004 | 10/12/2006 | Open | Feature | Buffer diffing/combining]

Drawing an image to the playfield should have some alternate modes, eg same
background colour, xor colour, only paint on spaces, etc. Provides an alternate
to layering.

[00006 | 10/12/2006 | Open | Feature | Star fields]

Create a mechanism where a starfield can be efficiently drawn and moved with
each frame - support twinkling, different directions, etc.

[00007 | 10/12/2006 | Open | Feature | Movement constraints, walls/maps]

Allow movement of a sprite to be constrained by basic shapes, and also within a
map.  Maybe reuse tilemaps. Useful in Gauntlet-type games where you don't want
to expensively test collisions, but to want to constrain.

Perhaps generalize by knowing where a player sprite is in relation to an
environment map.

[00008 | 15/02/2007 | Open | Feature | Motion path slowdown]

Support motion every n frames instead of each frame.  With frame rates of
up 100fps, we need a way to move things slowly.

[00009 | 15/02/2007 | Open | Feature | Formations]

Create a motionpath derivative that moves a sprite relative to another
one.  This can facilitate a leader sprite with complex movement and, say, 4
wingmen at a fixed position relative to it. Saves having to process script
blocks for each sprite.

An alternative is to simply get a sprite to treat the leader as the zero point
so the wingmen can still have independent motion, eg fly around the leader
in circles (kind of like a spinning shield).

[00010 | 15/02/2007 | Open | Feature | Zones]

A variant of a sprite that has no drawn image, but occupies space and can be
tested for collisions, moved, etc. Could also be useful for formation leaders
where there is no real leader.

[00012 | 15/02/2007 | Open | Feature | Fine Grain collision detection]

Overlap only when non-transparent cells overlap.

[00013 | 15/02/2007 | Open | Feature | Swap out image sets for sprites]

Associate different sets of images with a sprite and change between them...
eg a man looks different whether  he walks left or right.

Or an alien that explodes.

Changing set could be automatic based on motion path, eg an "east" set, a 
"southwest" set, etc.

Also support animating frames backwards, and manually.

[00014 | 15/02/2007 | Open | Feature | Fast depth sorting, layers]

We can order sprites with $s = ($s | sort {$_.z}) or something but maybe
better to do it directly and in place.

Also, introduce layering, so that collisions only occur in same
layers... enables all sprites to be kept in one collection so no need
to repeatedly call test-spriteoverlap


[00015 | 17/02/2007 | Open | Feature | Incorporate banner/box scripts]

Useful when doing highres text stuff with 4x6 pixel fonts

[00016 | 18/02/2007 | Open | Feature | add timer and random virtual events]

Prob re-use keyeventmap but use different names

create-eventmap
register-keyevent $map -key -block
register-timerevent $map -every n -block
process-eventmap

[00017 | 18/02/2007 | Open | Feature | High-score capture]

Persist to local registry, perhaps post to the internet.


[00018 | 18/02/2007 | Open | Feature | Reading of 16-color gifs]

Assume colour palette is same as that of console's.
Recognise transparency and animation frames.

A coloured pixel would be a single cell in the output.
Mapping should be allowed, but default to solid block.

[00019 | 18/02/2007 | Open | Feature | Better line drawing]

Use integer line raster algorithm. 

Support plotting points (although that is Draw-Image really)

Draw-Line $pf $img x1 y1 x2 y2 
Plot-Point is synonim for Draw-Image

Support polygons, including rasterising solid fills.

Draw-Poly $pf $img [point[]]$points [-Complete] [-Fill]

    -Complete draws a line from last pt to first
    -Fill fills the polygon (tiles the image)

[00020 | 18/02/2007 | Open | Feature | Motion paths from lines ]

Extend (poly)line drawing to emit a motionpath

Create-MotionPath -poly [point[]]$points [-complete] [-repeat]


[00021 | 18/02/2007 | Open | Feature | Target motion path ]

A motionpath that moves a sprite toward another one. Eg, to move toward
othersprite at 1 step per move:

Create-MotionPath -follow $othersprite -rate 1

Perhaps optionally specify acceleration and momentum (think black hole).

